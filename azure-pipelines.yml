# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-latest

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.8'
    addToPath: true
    architecture: 'x64'

- task: CmdLine@2
  name: InstallPyInstaller
  # This will clone and manually build the pyinstaller to avoid exe being flagged by windows defender
  inputs:
    script: |
      pip install wheel
      Invoke-WebRequest "https://github.com/pyinstaller/pyinstaller/archive/refs/tags/v4.5.1.zip" -OutFile "pyinstaller.zip"
      Expand-Archive .\pyinstaller.zip -DestinationPath .\
      
      cd pyinstaller-4.5.1 
      
      python.exe ./waf all --target-arch=64bit
      
      python.exe setup.py install
- task: PowerShell@2
  name: InsertSecrets
  env:
    API_URL: $(API_URL)
    APP_ID: $(APP_ID)
    TOKEN_URL: $(TOKEN_URL)
    AUTHORIZATION_URL: $(AUTHORIZATION_URL)
  inputs:
    targetType: 'inline'
    script: |
      (Get-Content installer.py).replace('{{PROD_API_URL}}', ${env:API_URL}) | Set-Content installer.py
      (Get-Content installer.py).replace('{{PROD_APP_ID}}', ${env:APP_ID}) | Set-Content installer.py
      (Get-Content installer.py).replace('{{PROD_TOKEN_URL}}', ${env:TOKEN_URL}) | Set-Content installer.py
      (Get-Content installer.py).replace('{{PROD_AUTHORIZATION_URL}}', ${env:AUTHORIZATION_URL}) | Set-Content installer.py
# - task: CmdLine@2
#   name: InstallPyinstaller
#   inputs:
#     script: 'pip install pyinstaller'
- task: CmdLine@2
  name: BuildBinaries
  inputs:
    script: |
      pyinstaller --distpath $(Build.ArtifactStagingDirectory)\dist --onefile --windowed installer.py
      pyinstaller --distpath $(Build.ArtifactStagingDirectory)\dist --onefile --windowed start.py
      pyinstaller --distpath $(Build.ArtifactStagingDirectory)\dist --onefile --windowed stop.py
- task: PublishBuildArtifacts@1
  name: PublishArtifacts
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)\dist'
    ArtifactName: 'bin'
    publishLocation: 'Container'
